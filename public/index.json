[{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article: IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n--- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n--- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nDes apartés pour les développeurs, Instant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article: IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n--- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n--- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nMode dark et mode light : En haut de chaque page, tu peux cliquer sur l\u0026rsquo;icone\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article: IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n--- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n--- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nMode dark et mode light : En haut de chaque page, tu peux cliquer sur l\u0026rsquo;icone ou\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article: IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n--- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n--- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nMode dark et mode light : En haut de chaque page, tu peux cliquer sur l\u0026rsquo;icone ou Des apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article: IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n--- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n--- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nMode dark et mode light : En haut de chaque page, tu peux cliquer sur l\u0026rsquo;icone ou\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article: IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n--- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n--- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nMode dark et mode light : En haut de chaque page, tu peux cliquer sur l\u0026rsquo;icone ou\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article: IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n--- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n--- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nMode dark et mode light : En haut de chaque page, tu peux cliquer sur l\u0026rsquo;icone ou Des apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article: IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n--- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n--- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nMode sombre et mode clair : En haut de chaque page, tu peux cliquer sur l\u0026rsquo;icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article: IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n--- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n--- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et mode clair : En haut de chaque page, tu peux cliquer sur l\u0026rsquo;icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article: IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n--- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n--- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page, tu peux cliquer sur l\u0026rsquo;icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article: IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n--- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n--- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n--- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n--- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n--- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n--- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#BB2528', 'primaryTextColor': '#fff', 'primaryBorderColor': '#7C0000', 'lineColor': '#F8B229', 'secondaryColor': '#006100', 'tertiaryColor': '#fff' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#BB2528', 'primaryTextColor': '#fff', 'primaryBorderColor': '#7C0000', 'lineColor': '#F8B229', 'secondaryColor': '#006100', 'tertiaryColor': '#fff' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryTextColor': '#fff', 'lineColor': '#F8B229', 'secondaryColor': '#006100', 'tertiaryColor': '#fff' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryTextColor': '#fff', 'lineColor': '#F8B229', 'secondaryColor': '#006100', 'tertiaryColor': '#fff' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryTextColor': '#fff', 'lineColor': '#007acc', 'secondaryColor': '#006100', 'tertiaryColor': '#fff' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryTextColor': '#fff', 'lineColor': '#007acc', 'secondaryColor': '#006100', 'tertiaryColor': '#fff' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryTextColor': '#fff', 'lineColor': '#007acc', } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryTextColor': '#fff', 'lineColor': '#007acc', } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryTextColor': '#fff', 'lineColor': '#007acc', 'secondaryColor': '#006100', 'tertiaryColor': '#fff' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryTextColor': '#fff', 'lineColor': '#007acc', 'secondaryColor': '#006100', 'tertiaryColor': '#fff' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryTextColor': '#fff', 'lineColor': '#007acc' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryTextColor': '#fff', 'lineColor': '#007acc' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryTextColor': '#fff', 'lineColor': '#007acc' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryTextColor': '#fff', 'lineColor': '#007acc' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryTextColor': '#fff', 'lineColor': '#007acc' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryTextColor': '#fff', 'lineColor': '#007acc' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryTextColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryTextColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#BB2528', 'primaryTextColor': '#fff', 'primaryBorderColor': '#7C0000', 'lineColor': '#F8B229', 'secondaryColor': '#006100', 'tertiaryColor': '#fff' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#BB2528', 'primaryTextColor': '#fff', 'primaryBorderColor': '#7C0000', 'lineColor': '#F8B229', 'secondaryColor': '#006100', 'tertiaryColor': '#fff' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#BB2528', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc', 'secondaryColor': '#006100', 'tertiaryColor': '#fff' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#BB2528', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc', 'secondaryColor': '#006100', 'tertiaryColor': '#fff' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#BB2528', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc', } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#BB2528', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc', } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#BB2528', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#BB2528', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#464646', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#464646', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#464646', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#464646', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#949494', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#949494', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#white', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#white', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#000', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#000', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#fff', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#fff', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#eee', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#eee', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n--- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n--- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe de relation entre les personnes --- graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% --- title: Graphe des appels que tu as passé --- graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Graphe de relation entre les personnes Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] Graphe des appels que tu as passé **On a donc les mêmes données, mais on utilise la structure adaptée à ce qu'on veut représenter.** Et c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Graphe de relation entre les personnes Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] Graphe des appels que tu as passé On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Graphe de relation entre les personnes Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] Graphe des appels que tu as passé On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Graphe de relation entre les personnes Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] Graphe des appels que tu as passé On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Graphe de relation entre les personnes Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] Graphe des appels que tu as passé On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Graphe de relation entre les personnes Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] Graphe des appels que tu as passé On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"},{"content":"Quand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet… Tu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\nDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\nDéfinitions Avant d’aller plus loin, quelques définitions simples, histoire de parler le même langage :\nDonnée : une donnée, c’est une information numérique. Ça peut être un numéro de passeport, le nombre de dents d’une personne, la liste des tâches que tu as encore repoussé à demain, ou ton nombre d’amis sur Facebook. Structure de données : imagine une boîte, une étagère ou un sac à dos, dans lequel tu ranges tes information d’une certaine manière pour mieux les retrouver ou les traiter. C’est la façon dont on organise les données. Algorithme : un algorithme, c’est une suite d’étapes ou d’instructions pour manipuler ces données. Comme une recette de cuisine, ou une procédure à suivre pour obtenir un résultat. File et pile : deux manières d’attendre… ou de repousser Maintenant qu’on a les bases, voyons deux structures de données très simples mais très puissantes : la file et la pile. On les retrouve partout dans notre quotidien, souvent sans s’en rendre compte.\nLa file — ou comment attendre son tour (FIFO) Imagine une file d’attente devant un guichet. Le premier arrivé est le premier servi. C’est ce qu’on appelle en informatique une file (ou queue en anglais), avec une logique FIFO : First In, First Out (premier entré, premier sorti).\nDès que quelqu’un est servi, c’est le suivant dans la file qui avance.\n🎯 C’est une structure équitable : chacun attend selon son ordre d’arrivée.\n📌 Exemples dans la vie réelle Faire la queue à la caisse du magasin La liste des courses (si on lit de haut en bas) 💻 Exemples en informatique Les systèmes de ticket dans les accueils (le numéro est généré par un programme, et les appels suivent cet ordre) Les commentaires sur une publication Facebook (affichés du plus ancien au plus récent) La pile — ou comment empiler les priorités (LIFO) Maintenant, imagine une pile de livres que tu dois réviser pour un examen. Tu prends celui du haut, tu le lis, puis tu prends celui juste en dessous, et ainsi de suite. Tu lis dans l’ordre inverse de celui dans lequel tu as empilé les livres. Tu viens de dépiler ta pile, toujours en commençant par le haut.\nC’est exactement le principe de la pile (ou stack en anglais), qui suit la logique LIFO : Last In, First Out (dernier entré, premier sorti).\nTu vas peut-être me dire :\nOui mais je peux aussi prendre le livre du bas, non ?\nC’est vrai. Alors prenons un autre exemple, un peu plus réaliste :\nImagine que tu tombes sur un article de journal qui parle des nodules polymétalliques dans les fonds marins de la Polynésie française. Tu n’y connais pas grand-chose, mais ça t’intrigue. Tu lis l’article, puis tu ouvres une page Wikipédia pour comprendre ce qu’est un nodule polymétallique. Sur cette page, tu vois un lien vers les métaux rares, puis vers la transition énergétique, puis… tu vois où je veux en venir.\nEn lisant ce premier article, tu ne soupçonnais pas toute la pile d’informations que tu allais explorer. Et tu viens de dépiler ce savoir, en commençant par la dernière page ouverte.\n🎯 Ce n’est pas une structure équitable : ce qui arrive en dernier est traité en premier. Mais c’est très utile pour remonter dans le temps, ou revenir sur ses pas, exactement comme le bouton \u0026ldquo;retour\u0026rdquo; de ton navigateur.\n📌 Exemples dans la vie réelle Les cartons dans un coffre bien rempli Les différentes strates de terre quand tu creuses dans ton jardin (c\u0026#39;est de la terre empilée au cours du temps) 💻 Exemples en informatique Le bouton \u0026#39;Retour\u0026#39; (←) de ton navigateur Les annulations successives (Undo, CTRL\u0026#43;Z) dans un éditeur de texte Si tu veux connaître d\u0026rsquo;autres structures de données, tu peux regarder le prochain article : IMVV - Chapitre 2 - Autres structure de données, j\u0026rsquo;organise mon bordel\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/file-et-pile/","summary":"\u003cp\u003eQuand tu prends un ticket pour attendre ton tour, que tu fais la queue à la caisse, que tu prends l’assiette du haut de la pile pour mettre la table, ou que tu cliques sur le bouton \u0026lsquo;Retour\u0026rsquo; (←) du navigateur internet…\nTu manipules sans le savoir des concepts qu’on appelle en informatique des structures de données, et les algorithmes associés qui les font vivre.\u003c/p\u003e\n\u003cp\u003eDans cet article, on va mettre un peu de clarté là-dedans : pas besoin de coder pour comprendre, on va illustrer tout ça avec des situations de la vie courante.\u003c/p\u003e","title":"IMVV - Chapitre 1 - File ou Pile ? L'art de passer avant les autres"},{"content":"Dans le précédent article IMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres structures de données (data structures en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\nN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\nTe donner une meilleure compréhension des bases de l’informatique, T\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien, ou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier. Le tableau — la base de presque tout Tu as peut-être remarqué dans le précédent article que la file et la pile se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un tableau.\nEn informatique, le tableau (ou array en anglais) est l’une des structures les plus simples : on range des éléments les uns à la suite des autres, dans un espace de taille fixe, et chaque élément est repéré par sa position (ou index).\nPrenons un exemple simple : un tableau d\u0026rsquo;amis à inviter pour un anniversaire, mais dans mon carnet d\u0026rsquo;adresse je n\u0026rsquo;ai que 6 places.\nAmis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 L’index est simplement la position de la personne dans le tableau, ce n\u0026rsquo;est pas un ordre.\nDans la plupart des langages informatiques, l\u0026rsquo;index commence à 0, et pas à 1.\nCet index nous permet d\u0026rsquo;accéder directement à Vai, l\u0026rsquo;amie à l\u0026rsquo;index 2 (ou 3ème élément), pour voir son numéro de téléphone par exemple.\nEt ce tableau peut se comporter différemment selon la manière dont on ajoute et retire les éléments. Par exemple, on peut le faire fonctionner comme une file ou une pile, simplement en changeant les règles du jeu.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Et on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean (vide) index 0 1 2 3 4 5 Pour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Et on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva (vide) index 0 1 2 3 4 5 Dans les deux cas, on utilise un tableau pour stocker les amis. C’est la logique d’ajout et de retrait qui transforme ce tableau en pile ou en file.\n🎯 Et c’est exactement pour ça que, lorsqu’on traite des dossiers empilés, il vaut mieux commencer par ceux du bas. Sinon, on inverse l’ordre d’arrivée… et ce n’est plus une file d’attente, mais une injustice organisée.\nS\u0026rsquo;il n\u0026rsquo;y a que 6 places, que se passe-t-il si j\u0026rsquo;ai 7 amis ?\nD\u0026rsquo;abord, je te félicite d\u0026rsquo;avoir autant d\u0026rsquo;amis. Ensuite, on peut s\u0026rsquo;en sortir, en achetant un carnet d\u0026rsquo;adresse qui a plus de places, et on recopie nos amis dans ce nouveau carnet.\nC\u0026rsquo;est similaire en informatique, on fait un nouveau tableau, plus grand, et on recopie.\nHeureusement, en informatique on a inventé une autre structure.\nLa liste — comme le tableau, mais dynamique La liste (ou list en anglais), c’est comme un tableau, mais en mieux : la taille n’est pas fixe.\nTu peux ajouter ou supprimer des éléments à tout moment, sans te soucier du nombre de places prévues au départ. Et à tout moment, tu peux demander : “Combien d’éléments j’ai dans cette liste ?” — et obtenir une réponse fiable.\nC’est la version souple du tableau, celle qu’on trouve dans la majorité des langages de programmation modernes.\nRefaisons les exemples de pile et de file, mais cette fois-ci avec des listes.\nSi c\u0026rsquo;est une file : On ajoute les amis à la fin. Par exemple, Jean arrive après Reva : Amis Manutea Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite depuis le début : on retire Manutea du tableau : Amis Vai Purotu Heiarii Reva Jean index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nPour une pile : On ajoute les amis au début. Jean arrive avant Manutea : Amis Jean Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 5 Nombre d\u0026rsquo;éléments: 6\nEt on traite toujours depuis le début : Jean passe en premier : Amis Manutea Vai Purotu Heiarii Reva index 0 1 2 3 4 Nombre d\u0026rsquo;éléments: 5\nOn remarque qu\u0026rsquo;il n\u0026rsquo;y a plus la case (vide) et le nombre d\u0026rsquo;élements change.\nInstant Dev Pour permettre cette souplesse, la liste est plus gourmande en calculs:\ncalcul à la volée du nombre d\u0026rsquo;éléments, réallocation de mémoire. Mais en vrai, à moins que tu ne codes un satellite, une carte embarquée, ou une console des années 80, où chaque octet compte, il y a peu de raisons d’utiliser un tableau fixe. Une liste dynamique t\u0026rsquo;évitera bien des migraines.\nLe tableau et la liste sont des structures très basiques et très puissantes, elles sont les bases de beaucoup d\u0026rsquo;autres structures qu\u0026rsquo;on verra par la suite.\nLe tableau associatif — ou comment indexer On avait pris l\u0026rsquo;exemple d\u0026rsquo;un carnet d\u0026rsquo;adresses qu\u0026rsquo;on avait mis dans un tableau ou dans une liste. C\u0026rsquo;est déjà très bien de pouvoir stocker ta liste d\u0026rsquo;amis, mais si tu as des centaines d\u0026rsquo;amis et que tu veux appeler Vai pour aller à la mer, tu vas galérer pour chercher dans ce carnet d\u0026rsquo;adresse.\nEn effet, avec les 2 dernières structures, tu dois parcourir les éléments un par un, jusqu\u0026rsquo;à tomber sur Vai. Tu vas perdre beaucoup de temps à chercher son numéro, ça va t\u0026rsquo;énerver, tu vas l\u0026rsquo;appeler, lui dire \u0026ldquo;mais quelle idée d\u0026rsquo;avoir un prénom qui commence par V!\u0026rdquo;, elle va s\u0026rsquo;énerver, vous ne serez plus amis, alors que tu voulais juste aller surfer.\nJe m\u0026rsquo;emporte un peu? Peut-être.\nPour résoudre ce problème, en informatique on a inventé le tableau associatif (ou map en anglais). On utilise le tableau, et on va profiter de l\u0026rsquo;index pour justement indexer les éléments.\nPour cela, on a besoin de réfléchir un peu:\nOn sait que l\u0026rsquo;index est une position dans le tableau, donc un nombre On sait que les prénoms commencent par une lettre (oui, je suis sérieux), on va supposer que c\u0026rsquo;est une lettre de l\u0026rsquo;alphabet, et pas un caractère spécial comme *$@ On sait qu\u0026rsquo;il y a 26 lettres dans l\u0026rsquo;alphabet =\u0026gt; Eurêka: On peut utiliser la 1ère lettre du prénom, la transformer en index en utilisant sa position dans l\u0026rsquo;alphabet, et associer le prénom à cet index. On dit que l\u0026rsquo;index est une clé et que le prénom est une valeur par exemple:\nManutea =\u0026gt; M =\u0026gt; M est la 14ème lettre de l\u0026rsquo;alphabet, donc Manutea sera le 14ème élément. Pour rappel, l\u0026rsquo;index commence à 0, donc M = index 13. clé: 13 valeur: Manutea\nPour Heiarii on aura: clé: 7 valeur: Heiarii\nCe qui nous donne:\nAmis (vide) (vide) (vide) (vide) (vide) (vide) (vide) Heiarii (vide) (vide) (vide) (vide) (vide) Manutea (vide) Purotu (vide) Reva (vide) (vide) (vide) Vai (vide) (vide) (vide) (vide) index 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Avec cette map, on pourra facilement accéder aux informations de Vai, puisqu\u0026rsquo;on pourra juste aller directement à l\u0026rsquo;index 21.\nInstant Dev En vrai, pour calculer l\u0026rsquo;index, on utilise une fonction de hachage (hash en anglais) qui permet de transformer les clés en index. C\u0026rsquo;est pour ça qu\u0026rsquo;on appelle ça un HashMap en Java. Oui mais moi je n\u0026rsquo;ai pas envie de m\u0026rsquo;embêter à compter sur mes doigts à quelle position est la lettre V\u0026hellip;\nTu as raison, dans la vraie vie, dans ton carnet d\u0026rsquo;adresse pour chaque lettre tu as une encoche où la lettre y est marquée, et tu notes les informations dans les pages qui correspondent à cette lettre.\nEn informatique c\u0026rsquo;est le même principe, sauf qu\u0026rsquo;on ne peut pas utiliser de lettre comme index, alors on est obligé de trouver cette astuce.\nEt en plus, il est nul ton carnet d\u0026rsquo;adresse, comment je fais si j\u0026rsquo;ai 2 amis qui s\u0026rsquo;appellent Vai et Vahine? Je mets Vahine dans la case juste après? Et si j\u0026rsquo;ai des centaines d\u0026rsquo;amis comme tu le disais au début, je fais comment pour les mettre dans les 26 cases?\nOk, tranquille, pas de stress.\nEn informatique, on peut combiner les structures, plutôt que d\u0026rsquo;associer un prénom à une lettre, on va associer une liste de prénoms à une lettre. Ci-dessous on réécrit notre map et on ajoute Vahine :\nClés 7 13 15 17 21 ↓ ↓ ↓ ↓ ↓ Heiarii Manutea Purotu Reva Vai Vahine Comme tu l\u0026rsquo;as remarqué, au lieu de mettre directement les prénoms dans les cases, il y a des flèches qui pointent vers des listes. On appelle ça un pointeur (ou pointer en anglais). c’est un mécanisme qui permet à l’ordinateur de dire \u0026ldquo;Va chercher les données ailleurs.\u0026rdquo; Plutôt que de stocker directement les valeurs, on stocke l’endroit où elles se trouvent.\nC\u0026rsquo;est la plus grande force de l\u0026rsquo;informatique, on peut combiner différents concepts abstraits pour répondre à notre besoin.\nL\u0026rsquo;ensemble — une structure unique Si comme moi tu fais ta liste de courses durant la semaine en prévision des grandes courses du dimanche, tu as peut-être déjà eu la liste qui ressemble à :\nlait oeufs pops viande salade oeufs Tu remarques que les oeufs apparaissent 2 fois. On appelle ça un doublon.\nÇa peut arriver si lundi tu t\u0026rsquo;es fait une omelette avec les derniers oeufs, tu les as notés pour en racheter. Puis que vendredi, tu voulais faire un gâteau, mais tu t\u0026rsquo;es souvenu que tu n\u0026rsquo;avais plus d\u0026rsquo;oeufs\u0026hellip; et alors tu les as réécrits.\nC\u0026rsquo;est très spécifique comme explication\u0026hellip; C\u0026rsquo;est ce qui t\u0026rsquo;es arrivé, pas vrai?\nTu n\u0026rsquo;as pas de preuve. Cette accusation est fausse.\nBref, la liste et le tableau n\u0026rsquo;ont aucun moyen d\u0026rsquo;empêcher la présence de doublons dans leurs éléments. C\u0026rsquo;est pour ça qu\u0026rsquo;en informatique on a inventé l\u0026rsquo;ensemble (ou set en anglais), une structure où chaque élément est unique.\nPar contre, le set n\u0026rsquo;est pas ordonné comme le tableau et la liste. Il n\u0026rsquo;y a pas d\u0026rsquo;index permettant d\u0026rsquo;accéder directement au 2ème ou 6ème élément.\nInstant Dev En informatique, pour faire un set, on utilise en fait une map où la clé est l\u0026rsquo;élément. Le calcul de hash nous garantit qu\u0026rsquo;il ne peut pas y avoir de doublon. Et on met une valeur arbitraire dans la valeur associée, comme 1 ou PRESENT.\nSi on veut une structure ordonnée sans doublons, on peut :\ncoder une liste avec une fonction d\u0026rsquo;ajout qui rejette les doublons, transformer un set en liste, utiliser une structure spécialisée, comme LinkedHashSet en Java 📌 Exemples dans la vie réelle L\u0026#39;ensemble des ingrédients qu’il te reste dans le frigo L\u0026#39;ensemble des invités à ton anniversaire 💻 Exemples en informatique L\u0026#39;ensemble des numéros de passeport en Polynésie française L\u0026#39;ensemble de tes amis Facebook Le graphe — ou comment appeler l\u0026rsquo;ami d\u0026rsquo;un ami d\u0026rsquo;un ami Tu prépares ta liste d’invités pour ton anniversaire, tu comptes inviter tout ton carnet d\u0026rsquo;adresses.\nEt là, tu réalises que tu n’as pas le contact de Paul. Tu l\u0026rsquo;as croisé en soirée et il était cool, tu voudrais l\u0026rsquo;inviter\u0026hellip; mais t\u0026rsquo;as oublié de lui demander son numéro.\nHeureusement, tu sais que Purotu le connaît.\nTu l\u0026rsquo;appelles\u0026hellip; zut, elle n\u0026rsquo;a pas son numéro. Mais elle te donne le numéro de Tiare, une autre amie de Paul. Tu appelles Tiare, tu te présentes, tu l\u0026rsquo;invite également car tu n\u0026rsquo;es pas un sauvage. Et tu lui demandes le numéro de Paul.\nBingo, elle l\u0026rsquo;a, tu appelles Paul et il est chaud pour venir à ton anniversaire.\nLes liens entre ces personnes peuvent être représentés par un graphe (ou graph en anglais).\nEt ce que tu viens de faire, sans t\u0026rsquo;en rendre compte, c\u0026rsquo;est un parcours de graphe, un algorithme !\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% graph TD A[Toi] --- B[Manutea] A --- C[Vai] A --- D[Purotu] A --- E[Heiarii] A --- F[Reva] A --- G[Jean] D --- H[Tiare] H --- I[Paul] Graphe de relation entre les personnes Ce graphe est non orienté, c\u0026rsquo;est-à-dire qu\u0026rsquo;il n\u0026rsquo;y a pas de sens entre les éléments.\nEffectivement pour éviter de fâcher les personnes, on ne va pas dire \u0026ldquo;Purotu est l\u0026rsquo;ami de Tiare, mais Tiare n\u0026rsquo;est pas l\u0026rsquo;ami de Purotu\u0026rdquo;.\nPar contre, on peut utiliser un graphe orienté pour représenter les appels que tu as passé.\n%%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#ddd', 'primaryTextColor': '#007acc', 'primaryBorderColor': '#007acc', 'lineColor': '#007acc' } } }%% graph TD A[Toi] --\u003e B[Manutea] A --\u003e C[Vai] A --\u003e D[Purotu] A --\u003e E[Heiarii] A --\u003e F[Reva] A --\u003e G[Jean] A --\u003e H[Tiare] A --\u003e I[Paul] Graphe des appels que tu as passé On a donc les mêmes données, mais on utilise la structure adaptée à ce qu\u0026rsquo;on veut représenter.\nEt c\u0026rsquo;est quoi le parcours de graphe?\nJe suis heureux que tu poses cette question, mais ta question dépasse le cadre de cet article.\nConclusion On a déjà vu pas mal de choses, je te laisse relire, essayer de combiner les structures entre elles, te renseigner sur internet en cherchant \u0026ldquo;structure de données\u0026rdquo; ou \u0026ldquo;data structure\u0026rdquo;.\nIl existe beaucoup de structures de données, celles qui sont présentées dans cet article sont juste les plus basiques, celles qu\u0026rsquo;on apprend dans les premières heures de cours de programmation.\nLe prochain article est en cours de rédaction.\n← Retour à l’introduction\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-donnees/","summary":"\u003cp\u003eDans le précédent article \u003ca href=\"../file-et-pile/\"\u003eIMVV - Chapitre 1 - File ou Pile ? L\u0026rsquo;art de passer avant les autres\u003c/a\u003e on a découvert les files et les piles. Cette fois, on va survoler plusieurs autres \u003cstrong\u003estructures de données\u003c/strong\u003e (\u003cem\u003edata structures\u003c/em\u003e en anglais) qu\u0026rsquo;on utilise très souvent en informatique\u0026hellip; et dans la vraie vie.\u003c/p\u003e\n\u003cp\u003eN\u0026rsquo;oublie pas que les objectifs de ces articles sont :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTe donner une meilleure compréhension des bases de l’informatique,\u003c/li\u003e\n\u003cli\u003eT\u0026rsquo;inspirer pour analyser ou optimiser les situations du quotidien,\u003c/li\u003e\n\u003cli\u003eou peut-être, qui sait, te donner envie d\u0026rsquo;explorer encore plus loin\u0026hellip; jusqu’à en faire ton métier.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"le-tableau--la-base-de-presque-tout\"\u003eLe tableau — la base de presque tout\u003c/h2\u003e\n\u003cp\u003eTu as peut-être remarqué dans le précédent article que la \u003cstrong\u003efile\u003c/strong\u003e et la \u003cstrong\u003epile\u003c/strong\u003e se ressemblent beaucoup. En réalité, on peut les représenter toutes les deux avec la même structure : un \u003cstrong\u003etableau\u003c/strong\u003e.\u003c/p\u003e","title":"IMVV - Chapitre 2 - Autres structure de données, j'organise mon bordel"},{"content":"Dans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\nEt c\u0026rsquo;est quoi le parcours de graphe?\nDans cet article, on va parler des structures de contrôle (control flow statements en anglais), qu\u0026rsquo;on utilise dans des algorithmes (algorithms en anglais).\nAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le parcours de graphe, on doit expliquer les structures de contrôle.\nLa boucle — ou comment avoir la flemme La condition — ou pourquoi il faut respecter le code de la route Revenons à notre parcours de graphe Pour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\nLa succession d\u0026rsquo;étapes que tu as fait pour appeler tes amis peut être écrit comme ceci:\nDans ta liste d\u0026#39;amis, pour chaque ami: Tu l\u0026#39;appelles Si il répond, alors: Tu l\u0026#39;invites à ton anniversaire Fin si Fin pour \u0026ldquo;Dans ta liste d\u0026rsquo;amis, pour chaque ami\u0026rdquo; marque le début d\u0026rsquo;une boucle (loop en anglais), et \u0026ldquo;Fin pour\u0026rdquo; marque la fin de la boucle. La boucle te permet de répéter la même action pour un ensemble d\u0026rsquo;éléments, en l\u0026rsquo;occurence, appeler un ami.\n\u0026ldquo;Si il répond, alors\u0026rdquo; marque le début d\u0026rsquo;une condition, et \u0026ldquo;Fin si\u0026rdquo; marque la fin de la condition. La condition te permet de faire une action uniquement si cette condition est respectée. En effet, on peut inviter un ami si et seulement si il répond à ton appel.\nLa boucle et la condition sont des structures de contrôle (control flow statements en anglais).\nSi on se représente ça :\nLa liste d\u0026rsquo;amis:\nManutea Vai Purotu Heiarii Reva Jean Pour chaque ami veut dire que tu as parcouru la liste:\nd\u0026rsquo;abord tu as pris Manutea, puis tu as effectué l\u0026rsquo;action: tu as appelé Manutea, puis tu as pris Vai, puis tu as appelé Vai, etc. jusqu\u0026rsquo;à Jean Et Paul?\nC\u0026rsquo;est là où ça devient plus compliqué.\n","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/structures-de-controle/","summary":"\u003cp\u003eDans l\u0026rsquo;article précédent, on s\u0026rsquo;était arrêté sur ta question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEt c\u0026rsquo;est quoi le parcours de graphe?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDans cet article, on va parler des \u003cstrong\u003estructures de contrôle\u003c/strong\u003e (\u003cem\u003econtrol flow statements\u003c/em\u003e en anglais), qu\u0026rsquo;on utilise dans des \u003cstrong\u003ealgorithmes\u003c/strong\u003e (\u003cem\u003ealgorithms\u003c/em\u003e en anglais).\u003c/p\u003e\n\u003cp\u003eAvant d\u0026rsquo;expliquer l\u0026rsquo;algorithme que tu as fait, le \u003cstrong\u003eparcours de graphe\u003c/strong\u003e, on doit expliquer les structures de contrôle.\u003c/p\u003e\n\u003ch2 id=\"la-boucle--ou-comment-avoir-la-flemme\"\u003eLa boucle — ou comment avoir la flemme\u003c/h2\u003e\n\u003ch2 id=\"la-condition--ou-pourquoi-il-faut-respecter-le-code-de-la-route\"\u003eLa condition — ou pourquoi il faut respecter le code de la route\u003c/h2\u003e\n\u003ch2 id=\"revenons-à-notre-parcours-de-graphe\"\u003eRevenons à notre parcours de graphe\u003c/h2\u003e\n\u003cp\u003ePour rappel, tu avais appelé tes amis pour les inviter à ton anniversaire, et tu avais été jusqu\u0026rsquo;au bout du monde, en sautant de relations en relations, pour inviter Paul.\u003c/p\u003e","title":"IMVV - Chapitre 3 - Structures de contrôle et algorithme, apprendre à réfléchir"},{"content":"L\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? » Avec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\nEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles. À travers cette série d’articles, \u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo; (abrégé IMVV), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger. Parce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\nInformations de lecture Avant de lire les articles listés en bas de cette page, quelques informations pour vous faciliter la lecture, vous trouverez :\nUn mode sombre et un mode clair : En haut de chaque page se trouve une icone pour interchanger entre les modes de lecture sombre et clair\nDes apartés pour les développeurs,\nInstant Dev Ceci est un aparté pour les développeurs, si tu es non développeur tu peux lire, mais tu auras peut-être mal à la tête. Des interjections de lecteur. J\u0026rsquo;interviens comme si j\u0026rsquo;étais toi, lecteur, pour aider l\u0026rsquo;auteur de ce blog à rendre ces articles dynamiques\nMot de fin Que tu sois curieux, débutant ou simplement en quête de sens dans ce monde numérique, cette série pourrait bien t’apporter quelque chose.\nTu y trouveras peut-être :\nune meilleure compréhension des bases de l’informatique, des idées pour analyser ou optimiser les situations du quotidien, ou même, qui sait, l’envie de plonger plus loin dans ce domaine… jusqu’à en faire ton métier. Bien sûr, cette série n’explorera qu’une infime partie de ce vaste domaine qu’est l’informatique. Après tout, peut-on vraiment expliquer entièrement l\u0026rsquo;informatique\u0026hellip; un domaine qui, justement, est le miroir de la vie* ?\n*: cette analogie est à prendre avec recul : l’informatique ne reflète pas toute la complexité de la vie.\nLes articles de la série IMVV - Chapitre 1 - File ou Pile ? L\u0026#39;art de passer avant les autres IMVV - Chapitre 2 - Autres structure de données, j\u0026#39;organise mon bordel En cours de rédaction ","permalink":"http://localhost:1313/blog.dev/posts/miroir-informatique-vraie-vie/introduction/","summary":"\u003cp\u003eL\u0026rsquo;informatique semble souvent obscure pour beaucoup. Quand je dis que je suis ingénieur informatique, on me demande régulièrement : « Mais tu fais quoi exactement ? »\nAvec le temps, j’ai pris l’habitude de vulgariser mon métier. Et ce qui fonctionne le mieux, ce sont les exemples concrets tirés de la vie quotidienne.\u003c/p\u003e\n\u003cp\u003eEn école d\u0026rsquo;ingénieur, j\u0026rsquo;apprenais beaucoup plus facilement l\u0026rsquo;informatique en partant de situations réelles.\nÀ travers cette série d’articles, \u003cstrong\u003e\u0026ldquo;L’informatique, un miroir de la vraie vie\u0026rdquo;\u003c/strong\u003e (abrégé \u003cem\u003eIMVV\u003c/em\u003e), je vais tenter d’expliquer des concepts informatiques en m’appuyant sur des scènes familières du quotidien, sur un ton léger.\nParce que finalement, coder un programme ou gérer une file d’attente au magasin, ce n’est pas si différent.\u003c/p\u003e","title":"IMMV - Chapitre 0 - L'informatique, un miroir de la vraie vie"},{"content":"Introduction Cet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\nUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\nDisclaimer: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\nLes différents types de carte En Polynésie Française, il est possible de payer avec plusieurs types de cartes.\nCarte Bancaire (anciennement Carte Bleue, co-brandées ou non de Visa ou Mastercard), American Express (AMEX), Cartes privatives (Socredo Verte / Gold, Banque de Polynésie Hoa, CCP de Fare Rata, Carte Tiare de la Banque de Tahiti), Union Pay International (UPI), Discover, Japan Credit Bureau (JCB) Les 3 derniers types de cartes sont surtout utilisés par les touristes.\nLes cartes privatives composent la majorité des cartes détenues par les habitants de la Polynésie Française.\nPourquoi autant de personnes ont une carte privative ? Les cartes privatives sont proposées par les différentes banques locales (à l\u0026rsquo;exception d\u0026rsquo;OFINA qui émet exclusivement les cartes AMEX). Il s\u0026rsquo;agit des banques Socredo, Banque de Tahiti, Banque de Polynésie, et Fare Rata.\nLes cartes privatives sont soumises à des réglementations et des frais moins coûteux que les cartes internationales.\nEn outre, elles sont uniquement régulées par les banques locales contrairement aux cartes bancaires internationales, qui sont non seulement régulées par les banques locales, mais aussi par les réseaux internationaux (CB, Visa, Mastercard, Union Pay, etc.).\nC\u0026rsquo;est en partie à cause de ces réglementations et frais moins coûteux que les clients des banques doivent remplir moins de conditions pour avoir une carte privative. C\u0026rsquo;est pour cela que les cartes privatives sont plus répandues sur le territoire.\nNotes:\nLes réseaux peuvent décider d\u0026rsquo;appliquer des amendes voire de désactiver le flux vers un acteur monétaire (banque, processeur de paiement, etc.) si celui-ci ne respecte pas la réglementation. Cette réglementation est mise à jour régulièrement.\nPour les cartes privatives, ce sont les banques locales qui imposent leur réglementation, par abus de langage, on parle aussi de réseau privatif pour désigner l\u0026rsquo;ensemble de ces banques.\nCes réglementations sont suivies par les banques centrales des pays, par exemple l\u0026rsquo;IEOM en Polynésie Française.\nJ\u0026rsquo;ai inclus la carte Tiare de la Banque de Tahiti dans les cartes privatives car elle a les mêmes limitations géographiques que celles-ci, et elle fonctionne aussi en métropole, mais il s\u0026rsquo;agit bien d\u0026rsquo;une CB, donc elle est soumise aux réglementations CB.\nLes cartes Socredo privatives sont maintenant co-brandées UPI, mais il y a bien 2 applications dans la carte, sur le territoire, c\u0026rsquo;est l\u0026rsquo;application privative qui est utilisée, à l\u0026rsquo;international, c\u0026rsquo;est l\u0026rsquo;application UPI qui est utilisée.\nFonctionnement des transactions Le schéma à 4 coins est l\u0026rsquo;un des schémas de référence de la monétique. Il explique les entités qui entrent en jeu dans une transaction.\nLa banque émettrice émet la carte et la fournit au porteur.\nLa banque acquéreuse fournit un contrat accepteur au commerçant, afin que celui-ci puisse encaisser les paiements avec les cartes, moyennant une commission, en plus des services annexes autour de l\u0026rsquo;encaissement (exemple: relevé TPE). Les TPE et solutions de paiement en ligne sont des services d\u0026rsquo;encaissement.\nUn système d\u0026rsquo;acceptation est un logiciel ou un ensemble de logiciels, qui permet d\u0026rsquo;encaisser une carte bancaire, par exemple les TPE et les plateformes de paiement en ligne.\nIl existe 2 modes de fonctionnement pour le déroulement d\u0026rsquo;un paiement:\nle mode single message le mode dual message Lorsque vous payez avec votre carte, vous réalisez une transaction. Si toutes les règles de gestion sont validées, la transaction est autorisée.\nEn single message, la transaction autorisée est directement transformée en mouvement financier, i.e. un enregistrement est créé chez la banque acquéreuse qui dit \u0026ldquo;M. Client doit 1000 XPF à M. Commerçant\u0026rdquo;.\nEn dual message, la transaction est enregistrée sur le TPE, ou sur la plateforme de paiement, puis, tous les jours à une certaine heure, l\u0026rsquo;ensemble des transactions de la journée sont envoyées à la banque acquéreuse sous forme de mouvement financier.\nEn Polynésie Française, le mode dual message est le plus répandu, c\u0026rsquo;est d\u0026rsquo;ailleurs pour ça que l\u0026rsquo;on vous demande de ne pas débrancher votre TPE, votre internet, votre réseau électrique.\nLes cartes et les systèmes d\u0026rsquo;acceptation Pour qu\u0026rsquo;un système d\u0026rsquo;acceptation puisse encaisser une carte, elle doit reconnaître la carte.\nPour reconnaître une carte, on utilise le BIN, qui sont les N premiers chiffres du numéro de la carte, N étant défini par le réseau.\nDe plus, seule une application spécifique à ce réseau peut reconnaître cette carte. Par exemple, pour une transaction avec une carte AMEX sur un TPE, c\u0026rsquo;est uniquement une application TPE AMEX qui pourra la reconnaître, mais seulement si la carte fait partie d\u0026rsquo;une plage de BIN acceptée par l\u0026rsquo;application.\nNote: Dans un TPE, il peut y avoir plusieurs applications, quand une carte est insérée, le TPE demande à chaque application \u0026ldquo;Peux-tu accepter cette carte?\u0026rdquo;.\nDe la même manière, pour une plateforme de paiement en ligne, celle-ci ne pourra accepter que des cartes qui font partie de ses plages de BIN déclarées.\nZoom sur le paiement en ligne en Polynésie Française Comme énoncé précédemment, les cartes privatives sont majoritaires en Polynésie Française, et elles ne sont pas reconnues à l\u0026rsquo;étranger (sauf pour les cartes Socredo co-brandées UPI, comme cité précédemment) car les BIN privatifs ne sont pas déclarés dans le monde.\nC\u0026rsquo;est pour cela qu\u0026rsquo;on ne peut pas payer avec une carte privative sur la plupart des plateformes de paiement en ligne (Paypal, Stripe, etc.), qui sont internationales.\nPour remédier à ce problème, OSB propose Payzen, et la Banque de Tahiti propose SystemPay.\nÀ mon avis, à l\u0026rsquo;heure actuelle, c\u0026rsquo;est vers ces solutions que je conseille les commerçants d\u0026rsquo;aller, car il serait dommage de se priver des cartes privatives, alors qu\u0026rsquo;elles sont plus nombreuses.\nNotes:\nLes 2 solutions sont en réalité basées sur les solutions Payzen et SystemPay de Lyra, société située en France. Certains d\u0026rsquo;entre vous ont d\u0026rsquo;ailleurs peut-être déjà été confus en recherchant de la documentation technique de ces solutions et se sont perdus entre:\nla documentation Payzen d\u0026rsquo;OSB, la documentation Payzen de Lyra, la documentation SystemPay de la Banque de Tahiti, la documentation SystemPay de Lyra. Je vous conseille de vous focaliser sur les documentations locales, et ensuite de compléter avec les documentations de Lyra.\nConclusion Il existe plusieurs types de cartes.\nLes protocoles de paiement s\u0026rsquo;inscrivent dans un schéma à 4 coins, il y a plusieurs acteurs qui entrent en jeu.\nIl y a une réglementation générale qui englobe tous les types de cartes, et chaque type a également sa réglementation spécifique. Les banques sont soumises à ces réglementations, l\u0026rsquo;IEOM et les réseaux (VISA, Mastercard, AMEX, etc.) veillent à ce que les banques respectent ces réglementations.\nLa géographie et les accords entre les acteurs sont importants pour comprendre les contraintes des systèmes de paiement locaux.\nEn Polynésie Française, la majorité des cartes bancaires sont des cartes privatives, pour des raisons économiques et réglementaires.\n","permalink":"http://localhost:1313/blog.dev/posts/intro-moyens-paiement/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eCet article est un aperçu très rapide des moyens de paiement en Polynésie Française.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUpdate (12/05/2022): suite à quelques feedback, je me rend compte que cet article est à destination des développeurs de site de e-shopping, des commerçants, de mes confrères monéticiens. Cet article sera complexe à lire si vous n\u0026rsquo;avez jamais travaillé avec un TPE, avec une plateforme de paiement, avec des cartes bancaires.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: Au moment où j\u0026rsquo;écris cet article, je travaille à l\u0026rsquo;Océanienne des Services Bancaires (OSB), Ces articles ne sont pas sponsorisés par OSB, et j\u0026rsquo;encourage les gens à faire des tutoriels pour les solutions des autres fournisseurs de solutions de paiement.\u003c/p\u003e","title":"Introduction aux moyens de paiement en Polynésie Française"},{"content":"Ia\u0026rsquo;orana, bonjour !\nCe post marque le début du blog hébergé sur Github.\nVous trouverez ici de temps en temps des articles de développement et des POCs.\nBonne lecture !\n","permalink":"http://localhost:1313/blog.dev/posts/hello-world/","summary":"\u003cp\u003eIa\u0026rsquo;orana, bonjour !\u003c/p\u003e\n\u003cp\u003eCe post marque le début du blog hébergé sur Github.\u003c/p\u003e\n\u003cp\u003eVous trouverez ici de temps en temps des articles de développement et des POCs.\u003c/p\u003e\n\u003cp\u003eBonne lecture !\u003c/p\u003e","title":"Hello World"}]